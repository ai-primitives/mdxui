name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
      - run: pnpm install
      - run: pnpm run build
      - run: pnpm run test
      - run: pnpm run lint

  release:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
      - run: pnpm install
      - run: pnpm run build
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
        run: |
          # Configure git for semantic-release
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          # Create .npmrc for publishing
          cat << EOF > .npmrc
          //registry.npmjs.org/:_authToken=\${NODE_AUTH_TOKEN}
          registry=https://registry.npmjs.org/
          always-auth=true
          EOF
          
          # Function to convert workspace dependencies
          convert_workspace_deps() {
            local pkg_file="$1"
            # Create a temporary file for the modified package.json
            local tmp_file=$(mktemp)
            
            # Use node to convert workspace dependencies to *
            node -e "
              const fs = require('fs');
              const pkg = JSON.parse(fs.readFileSync('$pkg_file', 'utf8'));
              
              function convertDeps(deps) {
                if (!deps) return {};
                return Object.fromEntries(
                  Object.entries(deps).map(([key, value]) => [
                    key,
                    value.startsWith('workspace:') ? '*' : value
                  ])
                );
              }
              
              pkg.dependencies = convertDeps(pkg.dependencies);
              pkg.devDependencies = convertDeps(pkg.devDependencies);
              
              fs.writeFileSync('$tmp_file', JSON.stringify(pkg, null, 2));
            "
            
            # Replace the original package.json with the modified one
            mv "$tmp_file" "$pkg_file"
          }
          
          # Process each package
          for dir in packages/*; do
            if [ -f "$dir/package.json" ]; then
              echo "Processing $dir"
              cd $dir
              
              # Backup original package.json
              cp package.json package.json.bak
              
              # Convert workspace dependencies
              convert_workspace_deps "package.json"
              
              # Run semantic-release
              npx semantic-release
              
              # Restore original package.json
              mv package.json.bak package.json
              
              cd ../..
            fi
          done
