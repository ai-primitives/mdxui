name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
      - run: pnpm install
      - run: pnpm run build
      - run: pnpm run test
      - run: pnpm run lint

  release:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
      - run: pnpm install
      - run: pnpm run build
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
        run: |
          # Configure git for semantic-release
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          # Create temporary publish config
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > .npmrc
          
          for dir in packages/*; do
            if [ -f "$dir/package.json" ]; then
              echo "Processing $dir"
              cd $dir
              
              # Create a temporary package.json for publishing
              cp package.json package.json.orig
              
              # Convert workspace dependencies to * using node
              node -e '
                const pkg = require("./package.json");
                const convertDeps = deps => {
                  if (!deps) return {};
                  return Object.fromEntries(
                    Object.entries(deps).map(([key, value]) => [
                      key,
                      value.startsWith("workspace:") ? "*" : value
                    ])
                  );
                };
                pkg.dependencies = convertDeps(pkg.dependencies);
                pkg.devDependencies = convertDeps(pkg.devDependencies);
                require("fs").writeFileSync("package.json", JSON.stringify(pkg, null, 2));
              '
              
              # Run semantic release with the modified package.json
              npx semantic-release
              
              # Restore original package.json
              mv package.json.orig package.json
              
              cd ../..
            fi
          done
          
          # Clean up
          rm -f .npmrc
